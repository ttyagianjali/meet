{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showMore","this","setState","event","description","props","className","summary","creator","email","start","dateTime","location","desc","onClick","showText","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","infoText","isNaN","updateNumberOfEvents","e","mockData","kind","etag","status","htmlLink","created","updated","self","organizer","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Set","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","href","getToken","fetch","then","res","json","catch","result","getEvents","NProgress","startsWith","done","token","removeQuery","url","setItem","JSON","stringify","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","currentCity","locationEvents","eventNumber","mounted","showWelcomeScreen","slice","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.d346bff7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n  state = {\n    showMore: false,\n  };\n\n  showMore() {\n    if (this.state.showMore === false) {\n      this.setState({ showMore: true });\n    } else {\n      this.setState({ showMore: false });\n    }\n  }\n\n  showText() {\n    if (this.state.showMore === false) {\n      return \"Show More\";\n    } else {\n      return \"Show Less\";\n    }\n  }\n\n  desc(event) {\n    if (this.state.showMore === false) {\n      return \"\";\n    } else {\n      return event.description;\n    }\n  }\n\n  render() {\n    const { event } = this.props;\n    return (\n      <>\n        <div className=\"event\">\n          <h2>{event.summary}</h2>\n          <p>\n            <b>Creator:</b> {event.creator.email}\n          </p>\n          <p>\n            <b>Start Time:</b> {event.start.dateTime}\n          </p>\n          <p>\n            <b>Location:</b> {event.location}\n          </p>\n          <p className=\"description\">{this.desc(event)}</p>\n          <button\n            className=\"details-btn\"\n            onClick={() => {\n              this.showMore(event);\n            }}\n          >\n            {this.showText()}\n          </button>\n        </div>\n      </>\n    );\n  }\n}\nexport default Event;\n","import React, { Component } from \"react\";\nimport Event from \"./Event\";\n\nclass EventList extends Component {\n  render() {\n  const { events } = this.props;\n  return (\n    <ul className=\"EventList\">\n      {events.map((event) => (\n        <li key={event.id}>\n          <Event event={event} />\n        </li>\n      ))}\n    </ul>\n  );\n\n }\n}\n\nexport default EventList;\n","import React, { Component } from \"react\";\n\nclass CitySearch extends Component {\n  state = {\n    query: \"\",\n    suggestions: [],\n    showSuggestions: undefined,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false,\n    });\n\n    this.props.updateEvents(suggestion);\n  };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => {\n            this.setState({ showSuggestions: true });\n          }}\n        />\n        <ul\n          className=\"suggestions\"\n          style={this.state.showSuggestions ? {} : { display: \"none\" }}\n        >\n          \n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","// import React, { Component } from \"react\";\n\n// class NumberOfEvents extends Component {\n//   state = {\n//     numberOfEvents: 32,\n//     infoText: \"\",\n//   };\n\n//   handleInputChanged = (event) => {\n//     const value = event.target.value;\n//     if (isNaN(value)) {\n//       this.setState({\n//         infoText: \"Please write a number\",\n//         numberOfEvents: value,\n//       });\n//     } else if (value < 1 || value > 32) {\n//       this.setState({\n//         infoText: \"Please select a number from 1 to 32\",\n//         numberOfEvents: value,\n//       });\n//     } else {\n//       this.setState({\n//         numberOfEvents: value,\n//         infoText: \"\",\n//       });\n//       this.props.updateNumberOfEvents(event.target.value);\n//     }\n//   };\n\n//   render() {\n//     const numberOfEvents = this.state.numberOfEvents;\n//     return (\n//       <div className=\"numberOfEvents\">\n//         <input\n//           type=\"text\"\n//           className=\"EventsNumber\"\n//           value={numberOfEvents}\n//           onChange={(e) => this.handleInputChanged(e)}\n//         />\n//         <label>Select Number of Events</label>\n//       </div>\n//     );\n//   }\n// }\n// export default NumberOfEvents;\n\nimport React, { Component } from \"react\";\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32,\n    infoText: \"\",\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    if (isNaN(value)) {\n      this.setState({\n        infoText: \"Please write a number\",\n        numberOfEvents: value,\n      });\n    } else if (value < 1 || value > 32) {\n      this.setState({\n        infoText: \"Please select a number from 1 to 32\",\n        numberOfEvents: value,\n      });\n    } else {\n      this.setState({\n        numberOfEvents: value,\n        infoText: \"\",\n      });\n      this.props.updateNumberOfEvents(event.target.value);\n    }\n  };\n\n    render() {\n    const numberOfEvents = this.state.numberOfEvents;\n    return (\n      <div className=\"numberOfEvents\">\n        <input\n          type=\"text\"\n          className=\"EventsNumber\"\n          value={numberOfEvents}\n          onChange={(e) => this.handleInputChanged(e)}\n        />\n        <label>Select Number of Events</label>\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","const mockData = [\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181161784712000\"',\n    id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:17:46.000Z\",\n    updated: \"2020-05-27T12:01:32.356Z\",\n    summary: \"Learn JavaScript\",\n    description:\n      \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    location: \"London, UK\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    start: {\n      dateTime: \"2020-05-19T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    end: {\n      dateTime: \"2020-05-19T17:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\n    originalStartTime: {\n      dateTime: \"2020-05-19T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n    eventType: \"default\",\n  },\n  \n  {\n    kind: \"calendar#event\",\n    etag: '\"3181159875584000\"',\n    id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:14:30.000Z\",\n    updated: \"2020-05-27T11:45:37.792Z\",\n    summary: \"React is Fun\",\n    description:\n      \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    location: \"Berlin, Germany\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    start: {\n      dateTime: \"2020-05-20T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    end: {\n      dateTime: \"2020-05-20T15:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    originalStartTime: {\n      dateTime: \"2020-05-20T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n    eventType: \"default\",\n  }\n];\n\nexport { mockData };\n","import { mockData } from \"./mock-data\";\nimport axios from \"axios\";\nimport NProgress from \"nprogress\";\n\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem(\"access_token\");\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://raro370h4k.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nexport const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url =\n      \"https://raro370h4k.execute-api.eu-central-1.amazonaws.com/dev/api/get-events\" +\n      \"/\" +\n      token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    \"https://raro370h4k.execute-api.eu-central-1.amazonaws.com/dev/api/token\" +\n      \"/\" +\n      encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n","import React, { Component } from \"react\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { extractLocations, getEvents } from \"./api\";\nimport \"./nprogress.css\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    currentCity: \"all\",\n  };\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents =\n        location === \"all\"\n          ? events\n          : events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents,\n      });\n    });\n  };\n\n  //I this function will update tbe number of events of app.state fom <NumberOfEvents>\n  updateNumberOfEvents(eventNumber) {\n    this.setState({ numberOfEvents: eventNumber });\n    const { currentCity } = this.state;\n    this.updateEvents(currentCity, eventNumber);\n  }\n\n  async componentDidMount() {\n    const { numberOfEvents } = this.state;\n    this.mounted = true;\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    this.setState({ showWelcomeScreen: !code });\n    if (code && this.mounted) {\n      getEvents().then((events) => {\n        if (this.mounted) {\n          this.setState({\n            events: events.slice(0, numberOfEvents),\n            locations: extractLocations(events),\n          });\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NumberOfEvents\n          updateNumberOfEvents={(e) => this.updateNumberOfEvents(e)}\n        />\n        <CitySearch\n          locations={this.state.locations}\n          updateEvents={this.updateEvents}\n          numberOfEvents={this.state.numberOfEvents}\n        />\n        <EventList events={this.state.events} />\n        <NumberOfEvents />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// import \"./nprogress.css\";\n// import React, { Component } from \"react\";\n// import \"./App.css\";\n// import EventList from \"./EventList\";\n// import NumberOfEvents from \"./NumberOfEvents\";\n// import CitySearch from \"./CitySearch\";\n// import { getEvents, extractLocations } from \"./api\";\n\n// class App extends Component {\n//   state = {\n//     events: [],\n//     locations: [],\n//     numberOfEvents: 32,\n//     currentCity: \"all\",\n//   };\n\n//   updateEvents = (location, numberOfEvents) => {\n//     getEvents().then((events) => {\n//       const locationEvents =\n//         location === \"all\"\n//           ? events.slice(0, numberOfEvents)\n//           : events.filter((event) => event.location === location);\n//       if (this.mounted) {\n//         this.setState({\n//           events: locationEvents.slice(0, numberOfEvents),\n//           currentCity: location,\n//         });\n//       }\n//     });\n//   };\n\n//   //I this function will update tbe number of events of app.state fom <NumberOfEvents>\n//   updateNumberOfEvents(eventNumber) {\n//     this.setState({ numberOfEvents: eventNumber });\n//     const { currentCity } = this.state;\n//     this.updateEvents(currentCity, eventNumber);\n//   }\n\n//   async componentDidMount() {\n//     const { numberOfEvents } = this.state;\n//     this.mounted = true;\n//     const searchParams = new URLSearchParams(window.location.search);\n//     const code = searchParams.get(\"code\");\n//     this.setState({ showWelcomeScreen: !code });\n//     if (code && this.mounted) {\n//       getEvents().then((events) => {\n//         if (this.mounted) {\n//           this.setState({\n//             events: events.slice(0, numberOfEvents),\n//             locations: extractLocations(events),\n//           });\n//         }\n//       });\n//     }\n//   }\n\n//   componentWillUnmount() {\n//     this.mounted = false;\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <CitySearch\n//           locations={this.state.locations}\n//           updateEvents={this.updateEvents}\n//           numberOfEvents={this.state.numberOfEvents}\n//         />\n\n//         <NumberOfEvents\n//           updateNumberOfEvents={(e) => this.updateNumberOfEvents(e)}\n//         />\n\n//         <EventList events={this.state.events} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as atatus from \"atatus-spa\";\natatus.config(\"36882f6382c84345bfb9d4235d7545f8\").install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}