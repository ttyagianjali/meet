{"version":3,"sources":["Event.js","EventList.js","Alert.js","NumberOfEvents.js","CitySearch.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","show","handleButton","setState","prevState","event","this","props","className","summary","location","start","dateTime","timeZone","description","onClick","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","NumberOfEvents","numberOfEvents","errorText","handleInputChanged","number","target","value","updateNumberOfEvents","type","onChange","e","CitySearch","query","suggestions","showSuggestions","undefined","infoText","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","onFocus","display","mockData","kind","etag","status","htmlLink","created","updated","creator","email","self","organizer","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Set","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","href","getToken","fetch","then","res","json","catch","result","getEvents","NProgress","startsWith","done","token","removeQuery","url","setItem","JSON","stringify","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","currentCity","locationEvents","slice","mounted","eventNumber","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"sOAsCeA,E,4MAnCbC,MAAQ,CACNC,MAAM,G,EAGRC,aAAe,WACb,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAAEH,MAAOG,EAAUH,U,4CAGnD,WAAU,IAAD,OACHI,EAAQC,KAAKC,MAAMF,MAEvB,OACE,sBAAKG,UAAU,QAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BH,EAAMI,UACpC,oBAAID,UAAU,gBAAd,SAA+BH,EAAMK,WACrC,qBAAIF,UAAU,YAAd,oBACUH,EAAMM,MAAMC,SADtB,iBAC8CP,EAAMM,MAAME,aAErC,IAApBP,KAAKN,MAAMC,MACV,mBAAGO,UAAU,eAAb,SAA6BH,EAAMS,eAEhB,IAApBR,KAAKN,MAAMC,MACV,wBAAQO,UAAU,WAAWO,QAAS,kBAAM,EAAKb,gBAAjD,2BAImB,IAApBI,KAAKN,MAAMC,MACV,wBAAQO,UAAU,WAAWO,QAAS,kBAAM,EAAKb,gBAAjD,iC,GA5BUc,aCgBLC,E,4JAdb,WACE,IAAQC,EAAWZ,KAAKC,MAAhBW,OACR,OACE,oBAAIV,UAAU,YAAd,SACGU,EAAOC,KAAI,SAACd,GAAD,OACV,6BACE,cAAC,EAAD,CAAOA,MAAOA,KADPA,EAAMe,a,GANDJ,aCDlBK,E,kDACJ,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IAIRe,SAAW,WACT,MAAO,CACLC,MAAO,EAAKA,QALd,EAAKA,MAAQ,KAFI,E,0CAWnB,WACE,OACE,qBAAKf,UAAU,QAAf,SACE,mBAAGgB,MAAOlB,KAAKgB,WAAf,SAA4BhB,KAAKC,MAAMkB,a,GAf3BT,aAqBdU,E,kDACJ,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IACDgB,MAAQ,OAFI,E,UADGF,GAOlBM,E,kDACJ,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IACDgB,MAAQ,MAFI,E,UADIF,GCcVO,E,4MAxCb5B,MAAQ,CACN6B,eAAgB,GAChBC,UAAW,I,EAGbC,mBAAqB,SAAC1B,GACpB,IAAM2B,EAAS3B,EAAM4B,OAAOC,MAC5B,GAAIF,GAAU,GAAKA,EAAS,GAC1B,OAAO,EAAK7B,SAAS,CACnB2B,UAAW,yCACXD,eAAgB,KAGlB,EAAK1B,SAAS,CACZ0B,eAAgBG,EAChBF,UAAW,KAEb,EAAKvB,MAAM4B,qBAAqB9B,EAAM4B,OAAOC,Q,4CAIjD,WAAU,IAAD,OACP,OACE,gCACE,sDAEA,uBACEE,KAAK,SACLhB,GAAG,cACHc,MAAO5B,KAAKN,MAAM6B,eAClBrB,UAAU,cACV6B,SAAU,SAACC,GAAD,OAAO,EAAKP,mBAAmBO,MAE3C,qBAAK9B,UAAU,YAAf,SACE,cAAC,EAAD,CAAYiB,KAAMnB,KAAKN,MAAM8B,qB,GAnCVd,aC2EduB,E,4MA1EbvC,MAAQ,CACNwC,MAAO,GACPC,YAAa,GACbC,qBAAiBC,EACjBC,SAAU,I,EAGZb,mBAAqB,SAAC1B,GACpB,IAAM6B,EAAQ7B,EAAM4B,OAAOC,MAC3B,EAAK/B,SAAS,CAAEuC,iBAAiB,IACjC,IAAMD,EAAc,EAAKlC,MAAMsC,UAAUC,QAAO,SAACpC,GAC/C,OAAOA,EAASqC,cAAcC,QAAQd,EAAMa,gBAAkB,KAEhE,GAA2B,IAAvBN,EAAYQ,OAOd,OAAO,EAAK9C,SAAS,CACnBqC,MAAON,EACPO,cACAG,SAAU,KATZ,EAAKzC,SAAS,CACZqC,MAAON,EACPU,SACE,2E,EAWRM,kBAAoB,SAACC,GACnB,EAAKhD,SAAS,CACZqC,MAAOW,EACPT,iBAAiB,IAEnB,EAAKnC,MAAM6C,aAAaD,EAAY,EAAK5C,MAAMsB,iB,4CAGjD,WAAU,IAAD,OACP,OACE,sBAAKrB,UAAU,aAAf,UACE,cAAC,EAAD,CAAWiB,KAAMnB,KAAKN,MAAM4C,WAC5B,uBACER,KAAK,OACL5B,UAAU,OACV0B,MAAO5B,KAAKN,MAAMwC,MAClBH,SAAU/B,KAAKyB,mBACfsB,QAAS,WACP,EAAKlD,SAAS,CAAEuC,iBAAiB,OAGrC,qBACElC,UAAU,cACVgB,MAAOlB,KAAKN,MAAM0C,gBAAkB,GAAK,CAAEY,QAAS,QAFtD,UAIGhD,KAAKN,MAAMyC,YAAYtB,KAAI,SAACgC,GAAD,OAC1B,oBACE3C,UAAU,mBAEVO,QAAS,kBAAM,EAAKmC,kBAAkBC,IAHxC,SAKGA,GAHIA,MAMT,oBACE3C,UAAU,SAEVO,QAAS,kBAAM,EAAKmC,kBAAkB,QAHxC,SAKE,gDAHI,iB,GAjESlC,a,+BCHnBuC,EAAW,CACf,CACEC,KAAM,iBACNC,KAAM,qBACNrC,GAAI,8CACJsC,OAAQ,YACRC,SACE,oJACFC,QAAS,2BACTC,QAAS,2BACTpD,QAAS,mBACTK,YACE,uWACFJ,SAAU,aACVoD,QAAS,CACPC,MAAO,oCACPC,MAAM,GAERC,UAAW,CACTF,MAAO,oCACPC,MAAM,GAERrD,MAAO,CACLC,SAAU,4BACVC,SAAU,iBAEZqD,IAAK,CACHtD,SAAU,4BACVC,SAAU,iBAEZsD,iBAAkB,6BAClBC,kBAAmB,CACjBxD,SAAU,4BACVC,SAAU,iBAEZwD,QAAS,wCACTC,SAAU,EACVC,UAAW,CACTC,YAAY,GAEdC,UAAW,WAGb,CACEjB,KAAM,iBACNC,KAAM,qBACNrC,GAAI,8CACJsC,OAAQ,YACRC,SACE,oJACFC,QAAS,2BACTC,QAAS,2BACTpD,QAAS,eACTK,YACE,mSACFJ,SAAU,kBACVoD,QAAS,CACPC,MAAO,oCACPC,MAAM,GAERC,UAAW,CACTF,MAAO,oCACPC,MAAM,GAERrD,MAAO,CACLC,SAAU,4BACVC,SAAU,iBAEZqD,IAAK,CACHtD,SAAU,4BACVC,SAAU,iBAEZsD,iBAAkB,6BAClBC,kBAAmB,CACjBxD,SAAU,4BACVC,SAAU,iBAEZwD,QAAS,wCACTC,SAAU,EACVC,UAAW,CACTC,YAAY,GAEdC,UAAW,Y,iCCtEFC,EAAmB,SAACxD,GAC/B,IAAIwD,EAAmBxD,EAAOC,KAAI,SAACd,GAAD,OAAWA,EAAMK,YAEnD,OADa,YAAO,IAAIiE,IAAID,KAIjBE,EAAc,uCAAG,sCAAAC,EAAA,yDACtBC,EAAcC,aAAaC,QAAQ,gBADb,KAETF,GAFS,qCAEaG,EAAWH,GAFxB,6BAEtBI,EAFsB,KAIvBJ,IAAeI,EAAWC,MAJH,kCAKpBJ,aAAaK,WAAW,gBALJ,eAMpBC,EAAe,IAAIC,gBAAgBC,OAAO7E,SAAS8E,QAN/B,UAOPH,EAAaI,IAAI,QAPV,WAOpBC,EAPoB,yCASFC,IAAMF,IAC1B,kFAVsB,eASlBG,EATkB,OAYhBC,EAAYD,EAAQE,KAApBD,QAZgB,kBAahBN,OAAO7E,SAASqF,KAAOF,GAbP,iCAenBH,GAAQM,EAASN,IAfE,iCAiBrBZ,GAjBqB,4CAAH,qDAoBdG,EAAU,uCAAG,WAAOH,GAAP,eAAAD,EAAA,sEACHoB,MAAM,+DAAD,OACuCnB,IAE9DoB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBC,OAAM,SAAClB,GAAD,OAAWA,EAAMiB,UALF,cAClBE,EADkB,yBAOjBA,GAPiB,2CAAH,sDAUVC,EAAS,uCAAG,kCAAA1B,EAAA,yDACvB2B,IAAU7F,SAEN4E,OAAO7E,SAASqF,KAAKU,WAAW,oBAHb,uBAIrBD,IAAUE,OAJW,kBAKdnD,GALc,uBAQHqB,IARG,YAQjB+B,EARiB,gCAWrBC,IACMC,EACJ,gFAEAF,EAfmB,UAgBAhB,IAAMF,IAAIoB,GAhBV,eAgBfP,EAhBe,QAiBVR,OACLjD,EAAY6B,EAAiB4B,EAAOR,KAAK5E,QAC7C6D,aAAa+B,QAAQ,aAAcC,KAAKC,UAAUV,EAAOR,OACzDf,aAAa+B,QAAQ,YAAaC,KAAKC,UAAUnE,KAEnD2D,IAAUE,OAtBW,kBAuBdJ,EAAOR,KAAK5E,QAvBE,4CAAH,qDA2BhB0F,EAAc,WAClB,GAAIrB,OAAO0B,QAAQC,WAAa3B,OAAO7E,SAASyG,SAAU,CACxD,IAAIC,EACF7B,OAAO7E,SAAS2G,SAChB,KACA9B,OAAO7E,SAAS4G,KAChB/B,OAAO7E,SAASyG,SAClB5B,OAAO0B,QAAQC,UAAU,GAAI,GAAIE,QAEjCA,EAAS7B,OAAO7E,SAAS2G,SAAW,KAAO9B,OAAO7E,SAAS4G,KAC3D/B,OAAO0B,QAAQC,UAAU,GAAI,GAAIE,IAI/BpB,EAAQ,uCAAG,WAAON,GAAP,mBAAAb,EAAA,6DACT0C,EAAaC,mBAAmB9B,GADvB,SAEgBO,MAC7B,2EAEEsB,GAEDrB,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZC,OAAM,SAAClB,GAAD,OAAWA,KAVL,wBAEPsC,EAFO,EAEPA,eAUQ1C,aAAa+B,QAAQ,eAAgBW,GAZtC,kBAcRA,GAdQ,2CAAH,sDCdCC,E,4MAhEb1H,MAAQ,CACNkB,OAAQ,GACR2B,UAAW,GACXhB,eAAgB,GAChB8F,YAAa,O,EAGfvE,aAAe,SAAC1C,EAAUmB,GACxB0E,IAAYL,MAAK,SAAChF,GAChB,IAAM0G,EACS,QAAblH,EACIQ,EAAO2G,MAAM,EAAGhG,GAChBX,EAAO4B,QAAO,SAACzC,GAAD,OAAWA,EAAMK,WAAaA,KAC9C,EAAKoH,SACP,EAAK3H,SAAS,CACZe,OAAQ0G,EAAeC,MAAM,EAAGhG,GAChC8F,YAAajH,Q,0DAQrB,SAAqBqH,GACnBzH,KAAKH,SAAS,CAAE0B,eAAgBkG,IAChC,IAAQJ,EAAgBrH,KAAKN,MAArB2H,YACRrH,KAAK8C,aAAauE,EAAaI,K,+BAGjC,WAAqB,IAAD,OACVlG,EAAmBvB,KAAKN,MAAxB6B,eACRvB,KAAKwH,SAAU,EACfvB,IAAYL,MAAK,SAAChF,GACZ,EAAK4G,SACP,EAAK3H,SAAS,CACZe,OAAQA,EAAO2G,MAAM,EAAGhG,GACxBgB,UAAW6B,EAAiBxD,U,kCAMpC,WACEZ,KAAKwH,SAAU,I,oBAGjB,WAAU,IAAD,OACP,OACE,sBAAKtH,UAAU,MAAf,UACE,cAAC,EAAD,CACEqC,UAAWvC,KAAKN,MAAM6C,UACtBO,aAAc9C,KAAK8C,aACnBvB,eAAgBvB,KAAKN,MAAM6B,iBAE7B,cAAC,EAAD,CACEM,qBAAsB,SAACG,GAAD,OAAO,EAAKH,qBAAqBG,MAEzD,cAAC,EAAD,CAAWpB,OAAQZ,KAAKN,MAAMkB,gB,GA3DpBF,aCEEgH,QACW,cAA7BzC,OAAO7E,SAASuH,UAEe,UAA7B1C,OAAO7E,SAASuH,UAEhB1C,OAAO7E,SAASuH,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,OAAc,oCAAoCC,UAElDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlD,MAAK,SAACmD,GACLA,EAAaC,gBAEdjD,OAAM,SAAClB,GACNoE,QAAQpE,MAAMA,EAAMqE,YE7G5BrB,M","file":"static/js/main.9a5a9a59.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n  state = {\n    show: false,\n  };\n\n  handleButton = () => {\n    this.setState((prevState) => ({ show: !prevState.show }));\n  };\n\n  render() {\n    let event = this.props.event;\n\n    return (\n      <div className=\"Event\">\n        <h1 className=\"EventSummary\">{event.summary}</h1>\n        <h2 className=\"EventLocation\">{event.location}</h2>\n        <h3 className=\"EventDate\">\n          start: {event.start.dateTime} - Time Zone: {event.start.timeZone}\n        </h3>\n        {this.state.show === true && (\n          <p className=\"EventDetails\">{event.description}</p>\n        )}\n        {this.state.show === false && (\n          <button className=\"showMore\" onClick={() => this.handleButton()}>\n            Show details\n          </button>\n        )}\n        {this.state.show === true && (\n          <button className=\"showLess\" onClick={() => this.handleButton()}>\n            hide details\n          </button>\n        )}\n      </div>\n    );\n  }\n}\nexport default Event;\n","import React, { Component } from \"react\";\nimport Event from \"./Event\";\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;\n","import React, { Component } from \"react\";\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  };\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = \"blue\";\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = \"red\";\n  }\n}\n\nexport { InfoAlert, ErrorAlert };","import React, { Component } from \"react\";\nimport {ErrorAlert} from './Alert';\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32,\n    errorText: \"\",\n  };\n\n  handleInputChanged = (event) => {\n    const number = event.target.value;\n    if (number <= 0 || number > 99) {\n      return this.setState({\n        errorText: \"Please enter a number between 0 and 99\",\n        numberOfEvents: \"\",\n      });\n    } else {\n      this.setState({\n        numberOfEvents: number,\n        errorText: \"\",\n      });\n      this.props.updateNumberOfEvents(event.target.value);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <p>Limit search results </p>\n\n        <input\n          type=\"number\"\n          id=\"numberInput\"\n          value={this.state.numberOfEvents}\n          className=\"numberInput\"\n          onChange={(e) => this.handleInputChanged(e)}\n        />\n        <div className=\"errorText\">\n          <ErrorAlert text={this.state.errorText} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default NumberOfEvents;\n","import React, { Component } from \"react\";\nimport { InfoAlert } from \"./Alert\";\n\nclass CitySearch extends Component {\n  state = {\n    query: \"\",\n    suggestions: [],\n    showSuggestions: undefined,\n    infoText: \"\"\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ showSuggestions: true });\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText:\n          \"We can not find the city you are looking for. Please try another city\",\n      });\n    } else {\n      return this.setState({\n        query: value,\n        suggestions,\n        infoText: \"\",\n      });\n    }\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false,\n    });\n    this.props.updateEvents(suggestion, this.props.numberOfEvents);\n  };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => {\n            this.setState({ showSuggestions: true });\n          }}\n        />\n        <ul\n          className=\"suggestions\"\n          style={this.state.showSuggestions ? {} : { display: \"none\" }}\n        >\n          {this.state.suggestions.map((suggestion) => (\n            <li\n              className=\"matchSuggestions\"\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li\n            className=\"seeAll\"\n            key=\"all\"\n            onClick={() => this.handleItemClicked(\"all\")}\n          >\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\nexport default CitySearch;\n","const mockData = [\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181161784712000\"',\n    id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:17:46.000Z\",\n    updated: \"2020-05-27T12:01:32.356Z\",\n    summary: \"Learn JavaScript\",\n    description:\n      \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    location: \"London, UK\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    start: {\n      dateTime: \"2020-05-19T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    end: {\n      dateTime: \"2020-05-19T17:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\n    originalStartTime: {\n      dateTime: \"2020-05-19T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n    eventType: \"default\",\n  },\n  \n  {\n    kind: \"calendar#event\",\n    etag: '\"3181159875584000\"',\n    id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:14:30.000Z\",\n    updated: \"2020-05-27T11:45:37.792Z\",\n    summary: \"React is Fun\",\n    description:\n      \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    location: \"Berlin, Germany\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    start: {\n      dateTime: \"2020-05-20T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    end: {\n      dateTime: \"2020-05-20T15:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    originalStartTime: {\n      dateTime: \"2020-05-20T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n    eventType: \"default\",\n  }\n];\n\nexport { mockData };\n","import { mockData } from \"./mock-data\";\nimport axios from \"axios\";\nimport NProgress from \"nprogress\";\n\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem(\"access_token\");\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://raro370h4k.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nexport const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url =\n      \"https://raro370h4k.execute-api.eu-central-1.amazonaws.com/dev/api/get-events\" +\n      \"/\" +\n      token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    \"https://raro370h4k.execute-api.eu-central-1.amazonaws.com/dev/api/token\" +\n      \"/\" +\n      encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport EventList from \"./EventList\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport CitySearch from \"./CitySearch\";\nimport { getEvents } from \"./api\";\n// import { mockData } from \"./mock-data\";\nimport { extractLocations } from \"./api\";\n\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    currentCity: \"all\",\n  };\n\n  updateEvents = (location, numberOfEvents) => {\n    getEvents().then((events) => {\n      const locationEvents =\n        location === \"all\"\n          ? events.slice(0, numberOfEvents)\n          : events.filter((event) => event.location === location);\n      if (this.mounted) {\n        this.setState({\n          events: locationEvents.slice(0, numberOfEvents),\n          currentCity: location,\n          //locations: [location],\n        });\n      }\n    });\n  };\n\n  //I this function will update tbe number of events of app.state fom <NumberOfEvents>\n  updateNumberOfEvents(eventNumber) {\n    this.setState({ numberOfEvents: eventNumber });\n    const { currentCity } = this.state;\n    this.updateEvents(currentCity, eventNumber);\n  }\n\n  componentDidMount() {\n    const { numberOfEvents } = this.state;\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events.slice(0, numberOfEvents),\n          locations: extractLocations(events),\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch\n          locations={this.state.locations}\n          updateEvents={this.updateEvents}\n          numberOfEvents={this.state.numberOfEvents}\n        />\n        <NumberOfEvents\n          updateNumberOfEvents={(e) => this.updateNumberOfEvents(e)}\n        />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as atatus from \"atatus-spa\";\natatus.config(\"534510a3e8a447959f0e433e4381fa47\").install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}